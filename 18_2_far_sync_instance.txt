
--on standby and primary node (if you need to decrease RAM of virtual machines)
SQL> alter system set memory_target=980M scope=spfile;

--shutdown vm's and adjust RAM size on system tab


--prerequests(all servers must include these entries)
$ vi /etc/hosts

192.168.56.101 primary.localdomain primary
192.168.56.102 standby.localdomain standby
192.168.56.103 farsync.localdomain farsync


--tnsnames.ora file must include these entries on all servers
$ cd /u01/app/oracle/product/12.2.0.1/db_1/network/admin

$ vi tnsnames.ora

PRIMARY =
 (DESCRIPTION =
  (ADDRESS = (PROTOCOL = TCP)(HOST = primary.localdomain)(PORT = 1521))
  (CONNECT_DATA =
   (SERVER = DEDICATED)
   (SERVICE_NAME = orclprm)
   (UR=A)
  )
 )

STANDBY =
 (DESCRIPTION =
  (ADDRESS = (PROTOCOL = TCP)(HOST = standby.localdomain)(PORT = 1521))
  (CONNECT_DATA =
   (SERVER = DEDICATED)
   (SERVICE_NAME = orclstb)
   (UR=A)
  )
 )

FARSYNC =
 (DESCRIPTION =
  (ADDRESS = (PROTOCOL = TCP)(HOST = farsync.localdomain)(PORT = 1521))
  (CONNECT_DATA =
   (SERVER = DEDICATED)
   (SERVICE_NAME = orclfs)
   (UR=A)
  )
 )


--Add listener to far sync
$ netca

--Add to listener.ora in far sync server
SID_LIST_LISTENER =
 (SID_LIST =
  (SID_DESC =
   (GLOBAL_DBNAME = orclfs)
   (ORACLE_HOME = /u01/app/oracle/product/12.2.0.1/db_1)
   (SID_NAME = orcl)
 )
  (SID_DESC =
   (GLOBAL_DBNAME = orclfs_dgmgrl)
   (ORACLE_HOME = /u01/app/oracle/product/12.2.0.1/db_1)
   (SID_NAME = orcl)
  )
)


--on all servers
$ lsnrctl start

$ tnsping other_nodes


--on primary
$ cd  

$ sqlplus / as sysdba

SQL> startup;

--create a controlfile for far sync standby database in the primary database.
SQL> alter database create far sync instance controlfile as '/home/oracle/far_sync_standby.ctl';

--create pfile from spfile for far sync standby database in the primary database.
SQL> create pfile='/home/oracle/pfile_farsync_standby.ora' from spfile;

--copy created pfile, controlfile and password file  to far sync standby database.
$ scp pfile_farsync_standby.ora oracle@farsync:/home/oracle/

$ scp far_sync_standby.ctl oracle@farsync:/home/oracle/

$ scp /u01/app/oracle/product/12.2.0.1/db_1/dbs/orapworcl oracle@farsync:/u01/app/oracle/product/12.2.0.1/db_1/dbs/orapworcl


--on farsync
$ cd 

--create required directories
$ mkdir -p /u01/app/oracle/admin/orcl/adump

$ mkdir -p /u01/app/oracle/fast_recovery_area/orcl/ORCL/controlfile/

$ mkdir -p /u01/app/oracle/oradata/ORCL/controlfile

--edit pfile for far sync database
$ vi pfile_farsync_standby.ora

*.control_files='/u01/app/oracle/oradata/ORCL/controlfile/control01.ctl','/u01/app/oracle/fast_recovery_area/orcl/ORCL/controlfile/control01.ctl'
*.db_domain=''
*.db_unique_name='orclfs'
*.log_archive_config='dg_config=(orclprm,orclfs,orclstb)'
*.fal_server='orclprm'
*.log_archive_dest_1 ='location=USE_DB_RECOVERY_FILE_DEST VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=orclfs'
*.log_archive_dest_2='SERVICE=standby VALID_FOR=(STANDBY_LOGFILES,STANDBY_ROLE) DB_UNIQUE_NAME=orclstb'
*.LOG_ARCHIVE_DEST_STATE_2=ENABLE
*.memory_target=740M

--We copy controlfile to true locations
$ cp far_sync_standby.ctl /u01/app/oracle/oradata/ORCL/controlfile/control01.ctl

$ cp far_sync_standby.ctl /u01/app/oracle/fast_recovery_area/orcl/ORCL/controlfile/control01.ctl

--startup far sync instance
$ sqlplus / as sysdba

SQL> startup nomount pfile='/home/oracle/pfile_farsync_standby.ora';

SQL> alter database mount;

--create spfile for far sync instance
SQL> create spfile from memory;

SQL> shutdown immediate;

--start far sync from spfile
SQL> startup mount;

--check database role 
SQL> select database_role from v$database;

--check dataguard config
SQL> select db_unique_name,dest_role from v$dataguard_config;


--drop and create standby log files
SQL> alter database drop standby logfile '/u01/app/oracle/oradata/orcl/redostb01.log';

SQL> alter database drop standby logfile '/u01/app/oracle/oradata/orcl/redostb02.log';

SQL> alter database drop standby logfile '/u01/app/oracle/oradata/orcl/redostb03.log';


SQL> alter database add standby logfile '/u01/app/oracle/oradata/ORCL/redostb01.log' size 209715200;

SQL> alter database add standby logfile '/u01/app/oracle/oradata/ORCL/redostb02.log' size 209715200;

SQL> alter database add standby logfile '/u01/app/oracle/oradata/ORCL/redostb03.log' size 209715200;

SQL> alter database add standby logfile '/u01/app/oracle/oradata/ORCL/redostb04.log' size 209715200;


-- Configure Primary Database

--edit some parameter for dataguard.
SQL> alter system set log_archive_config='dg_config=(orclprm,orclfs,orclstb)' scope=both;

SQL> alter system set log_archive_dest_2='SERVICE=orclfs SYNC COMPRESSION=ENABLE VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=orclfs' scope=both;

SQL> alter system set LOG_ARCHIVE_DEST_STATE_2=ENABLE scope=both;


--Configure Standby Database
$ cd 

$ sqlplus / as sysdba

SQL> startup

--edit some parameter for dataguard.
SQL> alter system set log_archive_config='dg_config=(orclprm,orclfs,orclstb)' scope=both;

SQL> alter system set log_archive_dest_2='SERVICE=orclprm SYNC COMPRESSION=ENABLE VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=orclprm' scope=both;

SQL> alter system set LOG_ARCHIVE_DEST_STATE_2=ENABLE scope=both;

SQL> alter system set fal_server='orclfs' scope=both;


--check dataguard process on each server
SQL> select process,status,thread#,sequence#,delay_mins,active_agents,client_process from v$managed_standby;

--check dataguard config
SQL> select db_unique_name,dest_role from v$dataguard_config;


--Add to data guard broker setup

--on farsync
SQL> alter system set log_archive_dest_2='' scope=both;

--on primary
$ dgmgrl /

DGMGRL> ADD FAR_SYNC orclfs AS CONNECT IDENTIFIER IS farsync;

DGMGRL> EDIT FAR_SYNC orclfs SET PROPERTY RedoRoutes = '(orclprm : orclstb ASYNC)';

DGMGRL> edit database orclprm set property redoroutes='(local : orclfs sync)';

DGMGRL> EDIT DATABASE orclprm SET PROPERTY LogXptMode = 'SYNC';

DGMGRL> EDIT DATABASE orclprm SET PROPERTY MaxFailure = 0;

DGMGRL> EDIT FAR_SYNC orclfs SET PROPERTY MaxFailure = 1;

DGMGRL> EDIT DATABASE orclstb SET PROPERTY MaxFailure = 0;

DGMGRL> EDIT DATABASE orclstb SET PROPERTY RedoRoutes = '(LOCAL : orclprm ASYNC)';

DGMGRL> enable configuration;

DGMGRL> EDIT CONFIGURATION SET PROTECTION MODE AS MAXAVAILABILITY;

--setting priority(12.2) for alternate destination
DGMGRL> EDIT DATABASE orclprm SET PROPERTY RedoRoutes = '(LOCAL : ( orclfs SYNC PRIORITY=1, orclstb ASYNC PRIORITY=2 ) )';


--set log_archive_dest_2 parameter again on far sync instance
SQL> alter system set log_archive_dest_2='SERVICE=standby VALID_FOR=(STANDBY_LOGFILES,STANDBY_ROLE) DB_UNIQUE_NAME=orclstb' scope=both;


--start log applying in the standby database
SQL> alter database recover managed standby database using current logfile disconnect;

--check dataguard process on each server
SQL> select process,status,thread#,sequence#,delay_mins,active_agents,client_process from v$managed_standby;

--check dataguard config
SQL> select db_unique_name,dest_role from v$dataguard_config;


--insert a new row on pluggable database on primary database
$ sqlplus mytest/mytest@pdb1

SQL> insert into test_tab values(6);

SQL> commit;

--check new record on standby database
$ sqlplus / as sysdba

SQL> alter pluggable database pdb1 open;

$ sqlplus mytest/mytest@pdb1

SQL> select * from test_tab;


--check whether priority setting works
--shutdown far sync instance
SQL> shutdown immediate;

--insert a new row on pluggable database on primary database
SQL> insert into test_tab values(7);

SQL> commit;

--check new record on standby database
SQL> select * from test_tab;
